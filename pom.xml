<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.5.RELEASE</version>
        <relativePath/>
    </parent>
    <groupId>br.community</groupId>
    <artifactId>component-test</artifactId>
    <packaging>jar</packaging>
    <version>0.0.1-SNAPSHOT</version>
    <name>quick-starter-component-test</name>
    <description>Quick start Component Test with Cucumber</description>

    <properties>
        <java.version>1.8</java.version>
        <jacoco.maven.plugin.version>0.8.4</jacoco.maven.plugin.version>
        <spring.cloud.version>Greenwich.SR1</spring.cloud.version>
        <cucumber.version>4.3.1</cucumber.version>
        <commons.collections.version>3.2.2</commons.collections.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-openfeign</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-ribbon</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
        </dependency>
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-java</artifactId>
            <version>${cucumber.version}</version>
        </dependency>
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-junit</artifactId>
            <version>${cucumber.version}</version>
        </dependency>
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-spring</artifactId>
            <version>${cucumber.version}</version>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
            <version>${commons.collections.version}</version>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring.cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <finalName>quick-starter-cucumber-component-test</finalName>
        <plugins>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.maven.plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>jacoco-initialize</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <propertyName>jacocoArgLine</propertyName>
                        </configuration>
                    </execution>
                    <!--<execution>-->
                    <!--<id>jacoco-check</id>-->
                    <!--<goals>-->
                    <!--<goal>check</goal>-->
                    <!--</goals>-->
                    <!--<configuration>-->
                    <!--<rules>-->
                    <!--<rule>-->
                    <!--<element>CLASS</element>-->
                    <!--<excludes>-->
                    <!--<exclude>**.*domains.**</exclude>-->
                    <!--<exclude>**.*jsons.**</exclude>-->
                    <!--<exclude>**.*confs.**</exclude>-->
                    <!--<exclude>**.*ApplicationConfiguration</exclude>-->
                    <!--</excludes>-->
                    <!--<limits>-->
                    <!--<limit>-->
                    <!--<counter>LINE</counter>-->
                    <!--<value>COVEREDRATIO</value>-->
                    <!--<minimum>1.00</minimum>-->
                    <!--</limit>-->
                    <!--<limit>-->
                    <!--<counter>INSTRUCTION</counter>-->
                    <!--<value>COVEREDRATIO</value>-->
                    <!--<minimum>1.00</minimum>-->
                    <!--</limit>-->
                    <!--<limit>-->
                    <!--<counter>BRANCH</counter>-->
                    <!--<value>COVEREDRATIO</value>-->
                    <!--<minimum>1.00</minimum>-->
                    <!--</limit>-->
                    <!--</limits>-->
                    <!--</rule>-->
                    <!--</rules>-->
                    <!--</configuration>-->
                    <!--</execution>-->
                    <execution>
                        <id>post-unit-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
